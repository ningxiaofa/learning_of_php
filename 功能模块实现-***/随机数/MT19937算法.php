<?php

class MT19937 {
    private $mt = array();
    private $mti;

    public function __construct($seed = null) {
        if ($seed === null) {
            $seed = time();
        }
        $this->mt[0] = $seed;
        for ($i = 1; $i < 624; $i++) {
            $this->mt[$i] = 0xffffffff & (1812433253 * ($this->mt[$i-1] ^ ($this->mt[$i-1] >> 30)) + $i);
        }
        $this->mti = 624;
    }

    public function rand() {
        if ($this->mti >= 624) {
            $this->twist();
        }
        $y = $this->mt[$this->mti++];
        $y ^= ($y >> 11);
        $y ^= (($y << 7) & 0x9d2c5680);
        $y ^= (($y << 15) & 0xefc60000);
        $y ^= ($y >> 18);
        return $y / 0xffffffff;
    }

    private function twist() {
        for ($i = 0; $i < 624; $i++) {
            $y = ($this->mt[$i] & 0x80000000) + ($this->mt[($i+1)%624] & 0x7fffffff);
            $this->mt[$i] = $this->mt[($i+397)%624] ^ ($y >> 1);
            if ($y % 2 != 0) {
                $this->mt[$i] ^= 2567483615;
            }
        }
        $this->mti = 0;
    }
}

$mt = new MT19937();
for ($i = 0; $i < 10; $i++) {
    echo $mt->rand() . "\n";
}

// ➜  learning_of_php git:(master) ✗ php 功能模块实现-***/随机数/MT19937算法.php
// 0.75739857478938
// 0.68675423056976
// 0.074438818747746
// 0.38612418980015
// 0.74679300765199
// 0.8347509801003
// 0.97473162249074
// 0.35509203615484
// 0.99918294115904
// 0.66879546797573
// ➜  learning_of_php git:(master) ✗ php 功能模块实现-***/随机数/MT19937算法.php
// 0.48147747583722
// 0.37857170248837
// 0.59907523673006
// 0.85231261487406
// 0.7549280742544
// 0.1941280037151
// 0.026606585138153
// 0.6038523057019
// 0.37881945641218
// 0.84218647327325
// ➜  learning_of_php git:(master) ✗ php 功能模块实现-***/随机数/MT19937算法.php
// 0.1351431177778
// 0.69026016809285
// 0.98716068407222
// 0.780683242432
// 0.95108729576484
// 0.70090647314231
// 0.97501402859926
// 0.64587331950801
// 0.94880830658339
// 0.31228354068293
// ➜  learning_of_php git:(master) ✗ 