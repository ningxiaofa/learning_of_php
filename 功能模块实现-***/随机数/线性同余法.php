<?php

class LCG {
    private $seed; // 种子参数
    private $a = 1103515245;
    private $c = 12345;
    private $m = 2147483648; // 2^31

    public function __construct($seed = null) {
        if ($seed === null) {
            $seed = time();
        }
        $this->seed = $seed % $this->m;
    }

    public function rand() {
        $this->seed = ($this->a * $this->seed + $this->c) % $this->m;
        return $this->seed / $this->m;
    }
}

$lcg = new LCG();
for ($i = 0; $i < 10; $i++) {
    echo $lcg->rand() . "\n";
}

// ➜  learning_of_php git:(master) ✗ php 功能模块实现-***/随机数/线性同余法.php
// 0.63099935650826
// 0.49205511482432
// 0.58887371327728
// 0.98124350560829
// 0.49599724076688
// 0.6641965159215
// 0.99526986945421
// 0.8318808353506
// 0.83273093029857
// 0.5675066341646
// ➜  learning_of_php git:(master) ✗ php 功能模块实现-***/随机数/线性同余法.php
// 0.65872801560909
// 0.53322962438688
// 0.59654809907079
// 0.70039001153782
// 0.17771612387151
// 0.97452022461221
// 0.42039952613413
// 0.079797802958637
// 0.082368307746947
// 0.30361315747723
// ➜  learning_of_php git:(master) ✗ php 功能模块实现-***/随机数/线性同余法.php
// 0.1725923451595
// 0.053816879168153
// 0.60038529196754
// 0.55996326450258
// 0.018575565423816
// 0.62968207895756
// 0.6329643544741
// 0.70375628676265
// 0.20718699647114
// 0.17166641913354
// ➜  learning_of_php git:(master) ✗ 